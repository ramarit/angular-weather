"use strict";angular.module("angularWeatherApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngStorage","ngTouch","angularReverseGeocode","vsGoogleAutocomplete"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/current/:cityID",{templateUrl:"views/current.html",controller:"CurrentCtrl",controllerAs:"current"}).when("/forecast/:cityID",{templateUrl:"views/forecast.html",controller:"ForecastCtrl",controllerAs:"forecast"}).when("/more-forecast:cityID",{templateUrl:"views/more-forecast.html",controller:"MoreForecastCtrl",controllerAs:"moreForecast"}).otherwise({redirectTo:"/"})}]);var app=angular.module("angularWeatherApp");app.controller("MainCtrl",["$scope","citysearch","$localStorage","$window",function(a,b,c,d){a.citiesFound=b.find(),a.storage=c,a.findCities=function(){a.citiesFound=b.find({query:a.location}),a.searchQuery=a.location},a.removeCity=function(){d.localStorage.clear(),d.location.reload()},a.options={types:["(cities"]}}]),angular.module("angularWeatherApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("angularWeatherApp").factory("current",["$resource",function(a){return a("http://api.openweathermap.org/data/2.5/weather?id=:cityID&units=imperial&APPID=cdadf9a60fdfd34508061bba24e7bd5d",{},{query:{method:"GET",params:{cityID:"4717560"},isArray:!1}})}]),angular.module("angularWeatherApp").factory("citysearch",["$resource",function(a){return a("http://api.openweathermap.org/data/2.5/find?q=:query&units=imperial&type=like&mode=json&APPID=cdadf9a60fdfd34508061bba24e7bd5d",{},{find:{method:"GET",params:{query:"seattle"},isArray:!1}})}]),angular.module("angularWeatherApp").controller("CurrentCtrl",["$scope","$routeParams","current","$localStorage",function(a,b,c,d){a.cityID=b.cityID,a.currentWeather=c.query({cityID:b.cityID}),a.saveCity=function(b){var c={name:b.name,id:b.id};if(d.savedCities){for(var e=!0,f=0;f<d.savedCities.length;f++)d.savedCities[f].id===c.id&&(e=!1);e===!0?(d.savedCities.push(c),a.citySaved={success:!0}):(console.log("city already saved"),a.citySaved={duplicate:!0})}else d.savedCities=[c],a.citySaved={success:!0}}}]),angular.module("angularWeatherApp").factory("forecast",["$resource",function(a){return a("http://api.openweathermap.org/data/2.5/forecast/daily?id=:cityID&cnt=10&units=imperial&APPID=cdadf9a60fdfd34508061bba24e7bd5d",{},{query:{method:"GET",params:{cityID:"4717560"},isArray:!1}})}]),angular.module("angularWeatherApp").controller("ForecastCtrl",["$scope","$routeParams","forecast",function(a,b,c){a.cityID=b.cityID,a.forecastData=c.query({cityID:b.cityID})}]),angular.module("angularWeatherApp").factory("moreForecast",["$resource",function(a){return a("http://api.openweathermap.org/data/2.5/forecast/daily?id=:cityID&cnt=10&units=imperial&APPID=cdadf9a60fdfd34508061bba24e7bd5d",{},{query:{method:"GET",params:{cityID:"4717560"},isArray:!1}})}]),angular.module("angularWeatherApp").controller("MoreForecastCtrl",["$scope","$routeParams","moreForecast",function(a,b,c){a.cityID=b.cityID,a.moreForecastData=c.query({cityID:b.cityID})}]),angular.module("angularWeatherApp").directive("ngEnter",function(){return function(a,b,c){b.bind("keydown keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter)}),b.preventDefault())})}}),angular.module("angularWeatherApp").factory("addresssearch",["$resource",function(a){return a("https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=AIzaSyDXQq5phpUKG8R_VgJqXd3CilhnAGS69Nw",{},{find:{method:"GET",params:{}}})}]),angular.module("angularWeatherApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view. - I've been modified</p>"),a.put("views/current.html",'<!--<div ng-messages="citySaved">\n  <p class="city-saved-alert bg-success text-success" ng-message="success">\n    {{currentWeather.name}} has been saved to your list of cities.\n  </p>\n  <p class="city-saved-alert bg-warning text-warning" ng-message="duplicate">\n    {{currentWeather.name}} has already been saved to your list of cities.\n  </p>\n</div>  \n<dl>\n    <dt>Currently</dt>\n    <dd>{{currentWeather.weather[0].main}}</dd>\n    <dd>{{currentWeather.weather[0].description}}</dd>\n    <dt>Temperature</dt>\n    <dd>{{currentWeather.main.temp}} &deg;F</dd>\n    <dt>Wind</dt>\n    <dd>{{currentWeather.wind.speed}} mph at {{currentWeather.wind.deg}} &deg;</dd>\n    <dt>Clouds</dt>\n    <dd>{{currentWeather.clouds.all}}%</dd>\n</dl>\n\n<p><a ng-href="#!/forecast/{{cityID}}" class="btn btn-lg btn-primary">View 16-day Forecast</a></p>\n--> <div class="current-container"> <div class="calendar-container" ng-style="{background-color: color}"> <div class="city-info"> <div class="city">{{currentWeather.name}}</div> <div class="day">{{currentWeather.dt*1000 | date:\'dd\'}}</div> <div class="month">{{currentWeather.dt*1000 | date:\'MMM\'}}</div> <!--<div class="icon"><img src="http://openweathermap.org/img/w/{{currentWeather.weather[0].icon}}.png" alt="icon" style="width:128px;height:128px;"></div>--> <div class="icon"><i class="wi wi-owm-day-{{currentWeather.weather[0].id}}"></i></div> </div> <div class="current-description"> <dl class="current-dl"> <dt>Currently</dt> <dd>{{currentWeather.weather[0].main}}</dd> <dd>{{currentWeather.weather[0].description}}</dd> <dt>Temperature</dt> <dd>{{currentWeather.main.temp}} &deg;F</dd> <dt>Wind</dt> <dd>{{currentWeather.wind.speed}} mph at {{currentWeather.wind.deg}} &deg;</dd> <dt>Clouds</dt> <dd>{{currentWeather.clouds.all}}%</dd> <dt>Sunrise</dt> <dd>{{currentWeather.sys.sunrise*1000 | date:\'mediumTime\'}}</dd> </dl> </div> <!-- .current-description --> </div> <!-- end calendar-container --> <p ng-if="!citySaved"><button class="btn btn-sm btn-primary" ng-click="saveCity(currentWeather)">Save City</button></p> <div ng-messages="citySaved"> <p class="city-saved-alert bg-success text-success" ng-message="success"> {{currentWeather.name}} has been saved to your list of cities. </p> <p class="city-saved-alert bg-warning text-warning" ng-message="duplicate"> {{currentWeather.name}} has already been saved to your list of cities. </p> </div> <p><a ng-href="#!/forecast/{{cityID}}" class="btn btn-lg btn-primary">View 5-day Forecast</a></p> </div> <!-- end container -->'),a.put("views/forecast.html",'<div class="forecast-container"> <h1>{{forecastData.city.name}}, {{forecastData.city.country}}</h1> <p><a ng-href="#!/current/{{cityID}}" class="btn btn-lg btn-primary">View Current Weather</a></p> <h1>5-day Forecast</h1> <dl ng-repeat="weather in forecastData.list | limitTo:5:0" class="weather-report description-dl"> <div class="forecast-info"> <div class="date">{{weather.dt*1000 | date: \'EEE\'}}</div> <div class="day">{{weather.dt*1000 | date:\'dd\'}}</div> <div class="month">{{weather.dt*1000 | date:\'MMM\'}}</div> <div class="forecast-icon"><i class="wi wi-owm-day-{{weather.weather[0].id}}"></i></div> <div class="max">{{weather.temp.max}} &deg;F</div> <div class="min">{{weather.temp.min}} &deg;F</div> <div class="forecast-description">{{weather.weather[0].main}}</div> <div class="forecast-description">{{weather.weather[0].description}}</div> </div> </dl> <!--<div class="arrow"><a ng-href="#!/more-forecast/{{cityID}}" style="display: block; z-index: 1"><object data="images/right-chevron.ccb2a8ad.svg" alt="chevron icon" type="image/svg+xml" style="z-index: -1; pointer-events: none;"></object></a> </div>--> </div>'),a.put("views/main.html",'<div ng-app ng-controller="MainCtrl"> <div ng-if="storage.savedCities"> <h2>Saved Cities</h2> <p><button class="btn btn-sm btn-primary" ng-click="removeCity()">Clear Cities</button></p> <ul class="saved-cities-list"> <li ng-repeat="city in storage.savedCities"> <a ng-href="#!/current/{{city.id}}" class="">{{city.name}}</a> </li> <!--<div id="1" class="dropdown">\n        <li><button class="dropbtn" id="btnClick" onclick="myFunction()">Add location</button></li>\n      </div>\n\n      \n\n      <div id="2" style="display:none;">\n        Search\n      </div>\n\n      <script>\n       $(\'#btnClick\').on(\'click\', function(){\n          if($(\'#1\').css(\'display\')!=\'none\') {\n            $(\'#2\').html().show().siblings(\'div\').hide();\n          }else if($(\'#2\').css(\'display\')!=\'none\'){\n            $(\'#1\').show().siblings(\'div\').hide();\n          }\n       });\n\n      </script>--> <!--<li class="dropdown"><a href="#" onclick="dropDown()">Add location</a></li>--> </ul> </div> <div class="jumbotron"> <h1>Select Your City</h1> <p class="lead"> <div ng-init="location=\'Seattle\'"> <p> <label for="location">Location: <input vs-google-autocomplete="{ types:[\'(cities)\'] }" type="text" name="location" id="location" ng-model="location" placeholder="Enter city name" ng-enter="findCities()"> </label> </p> <p> <button class="btn btn-lg btn-primary" ng-click="findCities()" ng-keydown="$event.keycode === 13 && findCities()">Find City</button> </p> </div> <div ng-if="searchQuery"> <!--<p class="lead">{{citiesFound.count}} cities found matching: {{searchQuery}}.</p>--> <dl ng-repeat="city in citiesFound.list | limitTo:1"> <reverse-geocode lat="{{city.coord.lat}}" lng="{{city.coord.lon}}"></reverse-geocode> <dt>{{city.name}}, {{city.sys.country}}</dt> <dd>{{city.weather[0].main}} - {{city.weather[0].description}}</dd> <dt>Temperature</dt> <dd>{{city.main.temp}} &deg;F</dd> <dd><a ng-href="#!/current/{{city.id}}" class="btn btn-lg btn-primary">View Weather</a></dd> </dl> </div> </p> </div> </div>'),a.put("views/more-forecast.html","<p>This is the more-forecast view.</p>")}]);